---
AWSTemplateFormatVersion: "2010-09-09"
Metadata: 
  License: MIT-0
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: "Amazon Security Lake information"
        Parameters: 
          - AmazonSecurityLakeCustomSourceName
          - AmazonSecurityLakeBucketName
      - Label: 
          default: "New resource configuration"
        Parameters: 
          - AWSGlueDatabaseName
          - AWSGlueTableName
          - AmazonKinesisDataFirehoseLogGroupName
    ParameterLabels:
      AmazonKinesisDataFirehoseLogGroupName:
        default: "Amazon Kinesis Data Firehose log group"
      AmazonSecurityLakeBucketName:
        default: "Amazon S3 bucket"
      AmazonSecurityLakeCustomSourceName:
        default: "Custom source name"
      AWSGlueDatabaseName:
        default: "AWS Glue database name"
      AWSGlueTableName:
        default: "AWS Glue table name"
Description: AWS CloudFormation Sample Template that creates the supporting resources for an AppFabric - Security Lake integration
Parameters:
  AmazonKinesisDataFirehoseLogGroupName:
    Type: String
    Description: Name a new CloudWatch log group for your Kinesis Data Firehose. Can only consist of letters (a-z, A-Z), numbers (0-9), '_', '-', '/' , '.', and '#'
    Default: /firehose-appfabric-security-lake
    AllowedPattern: ^[\w\d#//.-]+$
    ConstraintDescription: Parameter must only contain letters, numbers, '_', '-', '/' , '.', and '#'.
  AmazonSecurityLakeBucketName:
    Type: String
    Description: The name of the Amazon S3 bucket Security Lake assigned to your AppFabric custom source.
    Default: DOC-EXAMPLE-DESTINATION-BUCKET
  AmazonSecurityLakeCustomSourceName:
    Type: String
    Description: The name of your AppFabric custom source in Security Lake.
    Default: AppFabric
  AWSGlueDatabaseName:
    Type: String
    Description: Name a new Glue database for the AppFabric schema. Can include up to 255 lowercase letters (a-z), numbers (0-9), and underscores (_).
    Default: appfabric_schema_db
    AllowedPattern: ^[a-z0-9_]{1,255}$
    ConstraintDescription: Parameter must only contain lowercase letters, numbers, and underscores.
  AWSGlueTableName:
    Type: String
    Description: Name a new Glue database table for the AppFabric schema. Can include up to 255 lowercase letters (a-z), numbers (0-9), and underscores (_).
    Default: appfabric_schema
    AllowedPattern: ^[a-z0-9_]{1,255}$
    ConstraintDescription: Parameter must only contain lowercase letters, numbers, and underscores.
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
  GlueDatabase:
    Type: AWS::Glue::Database
    DeletionPolicy: Delete
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: "A database for AppFabric"
        Name: !Sub ${AWSGlueDatabaseName}
  GlueTable:
    Type: AWS::Glue::Table
    DeletionPolicy: Delete
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: GlueDatabase
      TableInput:
        Name: !Sub ${AWSGlueTableName}
        Description: The source schema for AppFabric
        TableType: EXTERNAL_TABLE
        Parameters: { "EXTERNAL": "TRUE" }
        StorageDescriptor:
          Columns:
            - Name: activity_id
              Type: string
              Comment: ""
            - Name: activity_name
              Type: string
              Comment: ""
            - Name: actor
              Type: struct<session:struct<created_time:bigint,uid:string,issuer:string>,user:struct<uid:string,email_addr:string,credential_uid:string,name:string,type:string>>
              Comment: ""
            - Name: user
              Type: struct<uid:string,email_addr:string,credential_uid:string,name:string,type:string>
              Comment: ""
            - Name: group
              Type: struct<uid:string,desc:string,name:string,type:string,privileges:array<string>>
              Comment: ""
            - Name: privileges
              Type: array<string>
              Comment: ""
            - Name: web_resources
              Type: array<struct<type:string,uid:string,name:string,data:struct<current_value:string,previous_value:string>>>
            - Name: http_request
              Type: struct<http_method:string,user_agent:string,url:string>
              Comment: ""
            - Name: auth_protocol
              Type: string
              Comment: ""
            - Name: auth_protocol_id
              Type: int
              Comment: ""
            - Name: category_name
              Type: string
              Comment: ""
            - Name: category_uid
              Type: string
              Comment: ""
            - Name: class_name
              Type: string
              Comment: ""
            - Name: class_uid
              Type: string
              Comment: ""
            - Name: is_mfa
              Type: boolean
              Comment: ""
            - Name: raw_data
              Type: string
              Comment: ""
            - Name: severity
              Type: string
              Comment: ""
            - Name: severity_id
              Type: int
              Comment: ""
            - Name: status
              Type: string
              Comment: ""
            - Name: status_detail
              Type: string
              Comment: ""
            - Name: status_id
              Type: int
              Comment: ""
            - Name: time
              Type: bigint
              Comment: ""
            - Name: type_name
              Type: string
              Comment: ""
            - Name: type_uid
              Type: string
              Comment: ""
            - Name: description
              Type: string
              Comment: ""
            - Name: metadata
              Type: struct<product:struct<uid:string,vendor_name:string,name:string>,processed_time:string,version:string,uid:string,event_code:string>
            - Name: device
              Type: struct<uid:string,hostname:string,ip:string,name:string,region:string,type:string,os:struct<name:string,type:string,version:string>,location:struct<coordinates:array<float>,city:string,state:string,country:string,postal_code:string,continent:string,desc:string>>
            - Name: unmapped
              Type: map<string,string>
          Location: !Sub s3://${S3Bucket}/
        Retention: 0
  FirehoseLogs:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LogGroupName: !Sub ${AmazonKinesisDataFirehoseLogGroupName}
      RetentionInDays: 7
  FirehoseLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref FirehoseLogs
  FirehoseLakeFormationDBPermissions:
    Type: AWS::LakeFormation::PrincipalPermissions
    Properties:
      Principal:
        DataLakePrincipalIdentifier: !GetAtt FirehoseRole.Arn
      Resource:
        Database:
          CatalogId: !Ref AWS::AccountId
          Name: !Ref GlueDatabase
      Permissions:
        - "DESCRIBE"
      PermissionsWithGrantOption:
        - "DESCRIBE"
  FirehoseLakeFormationTablePermissions:
    Type: AWS::LakeFormation::PrincipalPermissions
    Properties:
      Principal:
        DataLakePrincipalIdentifier: !GetAtt FirehoseRole.Arn
      Resource:
        Table:
          CatalogId: !Ref AWS::AccountId
          DatabaseName: !Ref GlueDatabase
          Name: !Ref GlueTable
      Permissions:
        - "SELECT"
        - "DESCRIBE"
      PermissionsWithGrantOption:
        - "SELECT"
        - "DESCRIBE"
  FirehosePermissions:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Action:
              - lakeformation:GetDataAccess
              - lakeformation:GetLFTag
              - lakeformation:GetResourceLFTags
              - lakeformation:ListLFTags
              - lakeformation:SearchDatabasesByLFTags
              - lakeformation:SearchTablesByLFTags
            Resource: "*"
          - Sid: ""
            Effect: Allow
            Action:
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:GetPartitions
              - glue:GetTable
              - glue:GetTables
              - glue:GetTableVersions
              - glue:SearchTables
            Resource:
              - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog
              - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${AWSGlueDatabaseName}
              - !Sub arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/${AWSGlueDatabaseName}/${AWSGlueTableName}
          - Sid: ""
            Effect: Allow
            Action:
              - s3:AbortMultipartUpload
              - s3:GetObject
              - s3:PutObject
              - s3:PutObjectAcl
            Resource: !Sub arn:aws:s3:::${AmazonSecurityLakeBucketName}/ext/${AmazonSecurityLakeCustomSourceName}/*
          - Sid: ""
            Effect: Allow
            Action:
              - s3:GetBucketLocation
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
            Resource:
              - !Sub arn:aws:s3:::${AmazonSecurityLakeBucketName}
              - !Sub arn:aws:s3:::${AmazonSecurityLakeBucketName}/*
          - Sid: ""
            Effect: Allow
            Action:
              - logs:PutLogEvents
            Resource:
              - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${FirehoseLogs}:log-stream:${FirehoseLogStream}:*
  FirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - !Ref FirehosePermissions
  KinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    DeletionPolicy: Delete
    DependsOn:
      - FirehoseLakeFormationDBPermissions
      - FirehoseLakeFormationTablePermissions
    Properties:
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub arn:aws:s3:::${AmazonSecurityLakeBucketName}
        Prefix: !Sub ext/${AmazonSecurityLakeCustomSourceName}/region=${AWS::Region}/accountId=${AWS::AccountId}/eventDay=!{partitionKeyFromQuery:eventDayValue}/
        ErrorOutputPrefix: !Sub ext/${AmazonSecurityLakeCustomSourceName}/firehose-errors/
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 128
        CompressionFormat: UNCOMPRESSED
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref FirehoseLogs
          LogStreamName: !Ref FirehoseLogStream
        RoleARN: !GetAtt FirehoseRole.Arn
        S3BackupMode: Disabled
        DynamicPartitioningConfiguration:
          Enabled: true
          RetryOptions:
            DurationInSeconds: 300
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Type: "MetadataExtraction"
              Parameters:
                - ParameterName: "MetadataExtractionQuery"
                  ParameterValue: '{eventDayValue:(.time/1000)|strftime("%Y%m%d")}'
                - ParameterName: "JsonParsingEngine"
                  ParameterValue: "JQ-1.6"
        DataFormatConversionConfiguration:
          Enabled: true
          InputFormatConfiguration:
            Deserializer:
              OpenXJsonSerDe:
                CaseInsensitive: true
                ColumnToJsonKeyMappings: {}
                ConvertDotsInJsonKeysToUnderscores: false
          OutputFormatConfiguration:
            Serializer:
              ParquetSerDe:
                BlockSizeBytes: 268435456
                Compression: "GZIP"
                EnableDictionaryCompression: false
                MaxPaddingBytes: 0
                PageSizeBytes: 1048576
                WriterVersion: "V1"
          SchemaConfiguration:
            DatabaseName: !Ref GlueDatabase
            Region: !Ref AWS::Region
            RoleARN: !GetAtt FirehoseRole.Arn
            TableName: !Ref GlueTable
            VersionId: "LATEST"